@use './theme-color' as theme-color;
@use "sass:map";

$-theme: (
  'primary': theme-color.$primary,
  'on-primary': theme-color.$on-primary,
  'secondary': theme-color.$secondary,
  'on-secondary': theme-color.$on-secondary,
  'background': theme-color.$background,
  'surface': theme-color.$surface,
  'on-surface': theme-color.$on-surface,
  'error': theme-color.$error,
  'on-error': theme-color.$on-error,
);

@use '@material/theme' as material-theme with (
  $primary: map.get($-theme, 'primary'),
  $on-primary: map.get($-theme, 'on-primary'),
  $secondary: map.get($-theme, 'secondary'),
  $on-secondary: map.get($-theme, 'on-secondary'),
  $background: map.get($-theme, 'background'),
  $surface: map.get($-theme, 'surface'),
  $on-surface: map.get($-theme, 'on-surface'),
  $error: map.get($-theme, 'error'),
  $on-error: map.get($-theme, 'on-error')
);

@mixin core-styles() {
  @include material-theme.core-styles;
}
